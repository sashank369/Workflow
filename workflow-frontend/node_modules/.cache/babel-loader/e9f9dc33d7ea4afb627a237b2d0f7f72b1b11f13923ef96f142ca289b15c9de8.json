{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sashank Reddy\\\\Desktop\\\\Assigment\\\\workflow-frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault(); // prevents form from refreshing the page\n    console.log(\"Login button clicked\");\n    try {\n      const response = await fetch(\"http://localhost:8080/realms/demo-realm/protocol/openid-connect/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          client_id: \"django-backend\",\n          grant_type: \"password\",\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(\"Keycloak response: \", data);\n      if (data.access_token) {\n        localStorage.setItem(\"token\", data.access_token);\n        onLogin(data.access_token);\n      } else {\n        alert(\"Login failed: \" + data.error_description);\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"flex flex-col space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        className: \"border px-3 py-2\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"border px-3 py-2\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","console","log","response","fetch","method","headers","body","URLSearchParams","client_id","grant_type","data","json","access_token","localStorage","setItem","alert","error_description","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Sashank Reddy/Desktop/Assigment/workflow-frontend/src/pages/LoginPage.jsx"],"sourcesContent":["// src/pages/Login.js\nimport React, { useState } from \"react\";\n\nfunction Login({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (e) => {\n    e.preventDefault(); // prevents form from refreshing the page\n    console.log(\"Login button clicked\");\n\n    try {\n      const response = await fetch(\"http://localhost:8080/realms/demo-realm/protocol/openid-connect/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: new URLSearchParams({\n          client_id: \"django-backend\",\n          grant_type: \"password\",\n          username,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n      console.log(\"Keycloak response: \", data);\n\n      if (data.access_token) {\n        localStorage.setItem(\"token\", data.access_token);\n        onLogin(data.access_token);\n      } else {\n        alert(\"Login failed: \" + data.error_description);\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\n      <form onSubmit={handleLogin} className=\"flex flex-col space-y-3\">\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          className=\"border px-3 py-2\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"border px-3 py-2\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}